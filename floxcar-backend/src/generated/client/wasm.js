
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.17.1
 * Query Engine version: 272a37d34178c2894197e17273bf937f25acdeac
 */
Prisma.prismaVersion = {
  client: "6.17.1",
  engine: "272a37d34178c2894197e17273bf937f25acdeac"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  email: 'email',
  password: 'password',
  role: 'role',
  createdAt: 'createdAt'
};

exports.Prisma.VehiculeScalarFieldEnum = {
  id: 'id',
  type: 'type',
  immatriculation: 'immatriculation',
  codeParc: 'codeParc',
  description: 'description',
  statut: 'statut',
  createdAt: 'createdAt'
};

exports.Prisma.TypeDepenseScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  description: 'description',
  createdAt: 'createdAt'
};

exports.Prisma.DepenseScalarFieldEnum = {
  id: 'id',
  dateIntervention: 'dateIntervention',
  typeVehicule: 'typeVehicule',
  codeParc: 'codeParc',
  typeDepenseId: 'typeDepenseId',
  libelle: 'libelle',
  quantite: 'quantite',
  montant: 'montant',
  statut: 'statut',
  dateCreation: 'dateCreation',
  commentaireControleurFinancier: 'commentaireControleurFinancier',
  commentaireControleurGestion: 'commentaireControleurGestion',
  commentaireResponsableAdmin: 'commentaireResponsableAdmin',
  commentaireAdminGeneral: 'commentaireAdminGeneral',
  commentaireDG: 'commentaireDG',
  commentaireLogisticien: 'commentaireLogisticien',
  dateReport: 'dateReport',
  vehiculeId: 'vehiculeId',
  soumisParId: 'soumisParId',
  valideParControleurFinancierId: 'valideParControleurFinancierId',
  valideParControleurGestionId: 'valideParControleurGestionId',
  valideParResponsableAdminId: 'valideParResponsableAdminId',
  valideParAdminGeneralId: 'valideParAdminGeneralId',
  valideParDGId: 'valideParDGId'
};

exports.Prisma.CommentaireScalarFieldEnum = {
  id: 'id',
  texte: 'texte',
  auteur: 'auteur',
  date: 'date',
  depenseId: 'depenseId'
};

exports.Prisma.DocumentScalarFieldEnum = {
  id: 'id',
  url: 'url',
  nom: 'nom',
  depenseId: 'depenseId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.Role = exports.$Enums.Role = {
  LOGISTICIEN: 'LOGISTICIEN',
  CONTROLEUR_FINANCIER: 'CONTROLEUR_FINANCIER',
  CONTROLEUR_GESTION: 'CONTROLEUR_GESTION',
  RESPONSABLE_ADMIN: 'RESPONSABLE_ADMIN',
  ADMIN_GENERAL: 'ADMIN_GENERAL',
  DG: 'DG',
  SUPER_ADMIN: 'SUPER_ADMIN'
};

exports.StatutDepense = exports.$Enums.StatutDepense = {
  BROUILLON: 'BROUILLON',
  SOUMIS: 'SOUMIS',
  REJETE_FINANCE: 'REJETE_FINANCE',
  VALIDE_FINANCE: 'VALIDE_FINANCE',
  REJETE_ADMIN: 'REJETE_ADMIN',
  VALIDE_ADMIN: 'VALIDE_ADMIN',
  TRAITE_PAR_CONTROLEUR_FINANCIER: 'TRAITE_PAR_CONTROLEUR_FINANCIER',
  TRAITE_PAR_CONTROLEUR_GESTION: 'TRAITE_PAR_CONTROLEUR_GESTION',
  TRAITE_PAR_RESPONSABLE_ADMIN: 'TRAITE_PAR_RESPONSABLE_ADMIN',
  TRAITE_PAR_ADMIN_GENERAL: 'TRAITE_PAR_ADMIN_GENERAL',
  REJETE: 'REJETE',
  TERMINE: 'TERMINE'
};

exports.Prisma.ModelName = {
  User: 'User',
  Vehicule: 'Vehicule',
  TypeDepense: 'TypeDepense',
  Depense: 'Depense',
  Commentaire: 'Commentaire',
  Document: 'Document'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\babay\\floxcar\\floxcar-backend\\src\\generated\\client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\babay\\floxcar\\floxcar-backend\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.17.1",
  "engineVersion": "272a37d34178c2894197e17273bf937f25acdeac",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "postinstall": false,
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// floxcar-backend/prisma/schema.prisma\ngenerator client {\n  provider = \"prisma-client-js\"\n  output   = \"../src/generated/client\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\n// --- Enums ---\n\nenum Role {\n  LOGISTICIEN\n  CONTROLEUR_FINANCIER\n  CONTROLEUR_GESTION\n  RESPONSABLE_ADMIN\n  ADMIN_GENERAL\n  DG\n  SUPER_ADMIN\n}\n\nenum StatutDepense {\n  BROUILLON\n  SOUMIS\n  // Anciens statuts (conservés pour compatibilité si besoin)\n  REJETE_FINANCE\n  VALIDE_FINANCE\n  REJETE_ADMIN\n  VALIDE_ADMIN\n  // Nouveaux statuts pour le workflow parallèle\n  TRAITE_PAR_CONTROLEUR_FINANCIER\n  TRAITE_PAR_CONTROLEUR_GESTION\n  TRAITE_PAR_RESPONSABLE_ADMIN\n  TRAITE_PAR_ADMIN_GENERAL // Alias de VALIDE_ADMIN\n  REJETE // Rejet par l'un des 4 principaux\n  TERMINE // Validé par 3 sur 4\n}\n\n// --- Models ---\n\nmodel User {\n  id        Int      @id @default(autoincrement())\n  nom       String\n  email     String   @unique\n  password  String\n  role      Role\n  createdAt DateTime @default(now())\n\n  // Relations pour les dépenses soumises\n  demandesSoumises Depense[] @relation(\"SoumisPar\")\n\n  // Relations pour les validations\n  validationsControleurFinancier Depense[] @relation(\"ValideParControleurFinancier\")\n  validationsControleurGestion   Depense[] @relation(\"ValideParControleurGestion\")\n  validationsResponsableAdmin    Depense[] @relation(\"ValideParResponsableAdmin\")\n  validationsAdminGeneral        Depense[] @relation(\"ValideParAdminGeneral\")\n\n  // Relation pour les validations DG (facultatif)\n  validationsDG Depense[] @relation(\"ValideParDG\")\n}\n\nmodel Vehicule {\n  id              Int      @id @default(autoincrement())\n  type            String\n  immatriculation String   @unique\n  codeParc        String?\n  description     String?\n  statut          String?\n  createdAt       DateTime @default(now())\n\n  depenses Depense[]\n}\n\nmodel TypeDepense {\n  id          Int      @id @default(autoincrement())\n  nom         String   @unique\n  description String?\n  createdAt   DateTime @default(now())\n\n  depenses Depense[]\n}\n\nmodel Depense {\n  id               Int           @id @default(autoincrement())\n  dateIntervention DateTime\n  typeVehicule     String\n  codeParc         String\n  typeDepenseId    Int\n  typeDepense      TypeDepense   @relation(fields: [typeDepenseId], references: [id])\n  libelle          String\n  quantite         Int?\n  montant          Int\n  statut           StatutDepense @default(SOUMIS)\n  dateCreation     DateTime      @default(now())\n\n  // Commentaires pour chaque validateur\n  commentaireControleurFinancier String?\n  commentaireControleurGestion   String?\n  commentaireResponsableAdmin    String?\n  commentaireAdminGeneral        String?\n  commentaireDG                  String? // Pour le DG\n  commentaireLogisticien         String?\n\n  dateReport DateTime?\n\n  vehiculeId Int\n  vehicule   Vehicule @relation(fields: [vehiculeId], references: [id])\n\n  soumisParId Int\n  soumisPar   User @relation(\"SoumisPar\", fields: [soumisParId], references: [id])\n\n  // Champs de validation pour les nouveaux rôles\n  valideParControleurFinancierId Int?\n  valideParControleurFinancier   User? @relation(\"ValideParControleurFinancier\", fields: [valideParControleurFinancierId], references: [id])\n\n  valideParControleurGestionId Int?\n  valideParControleurGestion   User? @relation(\"ValideParControleurGestion\", fields: [valideParControleurGestionId], references: [id])\n\n  valideParResponsableAdminId Int?\n  valideParResponsableAdmin   User? @relation(\"ValideParResponsableAdmin\", fields: [valideParResponsableAdminId], references: [id])\n\n  // On garde l'ancien champ pour compatibilité\n  valideParAdminGeneralId Int?\n  valideParAdminGeneral   User? @relation(\"ValideParAdminGeneral\", fields: [valideParAdminGeneralId], references: [id])\n\n  // Validation DG (facultatif)\n  valideParDGId Int?\n  valideParDG   User? @relation(\"ValideParDG\", fields: [valideParDGId], references: [id])\n\n  documents    Document[]\n  commentaires Commentaire[] @relation(\"DepenseCommentaires\")\n}\n\nmodel Commentaire {\n  id        Int      @id @default(autoincrement())\n  texte     String\n  auteur    String\n  date      DateTime @default(now())\n  depenseId Int\n  depense   Depense  @relation(\"DepenseCommentaires\", fields: [depenseId], references: [id], onDelete: Cascade)\n}\n\nmodel Document {\n  id        Int     @id @default(autoincrement())\n  url       String\n  nom       String\n  depenseId Int\n  depense   Depense @relation(fields: [depenseId], references: [id], onDelete: Cascade)\n}\n",
  "inlineSchemaHash": "09a48150801cf9bf802636fee70ff9bf8847094778518cc101f0fdfe258b3a42",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"role\",\"kind\":\"enum\",\"type\":\"Role\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"demandesSoumises\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"SoumisPar\"},{\"name\":\"validationsControleurFinancier\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"ValideParControleurFinancier\"},{\"name\":\"validationsControleurGestion\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"ValideParControleurGestion\"},{\"name\":\"validationsResponsableAdmin\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"ValideParResponsableAdmin\"},{\"name\":\"validationsAdminGeneral\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"ValideParAdminGeneral\"},{\"name\":\"validationsDG\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"ValideParDG\"}],\"dbName\":null},\"Vehicule\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"type\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"immatriculation\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codeParc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"statut\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"depenses\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"DepenseToVehicule\"}],\"dbName\":null},\"TypeDepense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"description\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"depenses\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"DepenseToTypeDepense\"}],\"dbName\":null},\"Depense\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"dateIntervention\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"typeVehicule\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"codeParc\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"typeDepenseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"typeDepense\",\"kind\":\"object\",\"type\":\"TypeDepense\",\"relationName\":\"DepenseToTypeDepense\"},{\"name\":\"libelle\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"quantite\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"montant\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"statut\",\"kind\":\"enum\",\"type\":\"StatutDepense\"},{\"name\":\"dateCreation\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"commentaireControleurFinancier\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentaireControleurGestion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentaireResponsableAdmin\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentaireAdminGeneral\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentaireDG\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"commentaireLogisticien\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dateReport\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"vehiculeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"vehicule\",\"kind\":\"object\",\"type\":\"Vehicule\",\"relationName\":\"DepenseToVehicule\"},{\"name\":\"soumisParId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"soumisPar\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"SoumisPar\"},{\"name\":\"valideParControleurFinancierId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"valideParControleurFinancier\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ValideParControleurFinancier\"},{\"name\":\"valideParControleurGestionId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"valideParControleurGestion\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ValideParControleurGestion\"},{\"name\":\"valideParResponsableAdminId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"valideParResponsableAdmin\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ValideParResponsableAdmin\"},{\"name\":\"valideParAdminGeneralId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"valideParAdminGeneral\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ValideParAdminGeneral\"},{\"name\":\"valideParDGId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"valideParDG\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"ValideParDG\"},{\"name\":\"documents\",\"kind\":\"object\",\"type\":\"Document\",\"relationName\":\"DepenseToDocument\"},{\"name\":\"commentaires\",\"kind\":\"object\",\"type\":\"Commentaire\",\"relationName\":\"DepenseCommentaires\"}],\"dbName\":null},\"Commentaire\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"texte\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"auteur\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"date\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"depenseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"depense\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"DepenseCommentaires\"}],\"dbName\":null},\"Document\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"url\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"nom\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"depenseId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"depense\",\"kind\":\"object\",\"type\":\"Depense\",\"relationName\":\"DepenseToDocument\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

